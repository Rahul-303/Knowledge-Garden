// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(cuid())
  email                String    @unique
  password             String
  name                 String
  lastLogin            DateTime? @default(now())
  isVerified           Boolean?  @default(false)
  resetToken           String?   @unique
  resetTokenExpires    DateTime?
  verifiedToken        String?   @unique
  verifiedTokenExpires DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  contents             Content[]
}

model Content {
  id          String          @id @default(cuid())
  authorId    String
  content     String
  author      User            @relation(fields: [authorId], references: [id])
  tags        TagsOnContent[]
  contentType ContentType
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Tag {
  id       String          @id @default(cuid())
  name     String          @unique
  contents TagsOnContent[]
}

model TagsOnContent {
  content   Content @relation(fields: [contentId], references: [id], onDelete: Cascade)
  contentId String
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId     String

  @@id([contentId, tagId])
}

enum ContentType {
  twitter
  youtube
  spotify
  medium
  reddit
  generic
}
